# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DINMessage

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Hyperparameters(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 40

    # Hyperparameters
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Hyperparameters
    def CommunicationRounds(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Hyperparameters
    def LocalIterNum(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Hyperparameters
    def TrainBatchSize(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # Hyperparameters
    def TestBatchSize(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # Hyperparameters
    def PredictBatchSize(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # Hyperparameters
    def PredictUserNum(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(20))
    # Hyperparameters
    def PredictAdsNum(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))
    # Hyperparameters
    def LearningRate(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(28))
    # Hyperparameters
    def DecayRate(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(32))
    # Hyperparameters
    def EmbeddingDim(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(36))

def CreateHyperparameters(builder, communicationRounds, localIterNum, trainBatchSize, testBatchSize, predictBatchSize, predictUserNum, predictAdsNum, learningRate, decayRate, embeddingDim):
    builder.Prep(4, 40)
    builder.PrependInt32(embeddingDim)
    builder.PrependFloat32(decayRate)
    builder.PrependFloat32(learningRate)
    builder.PrependInt32(predictAdsNum)
    builder.PrependInt32(predictUserNum)
    builder.PrependInt32(predictBatchSize)
    builder.PrependInt32(testBatchSize)
    builder.PrependInt32(trainBatchSize)
    builder.PrependInt32(localIterNum)
    builder.PrependInt32(communicationRounds)
    return builder.Offset()
